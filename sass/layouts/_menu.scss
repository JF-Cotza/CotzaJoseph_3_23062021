@use "sass:math";

$place:'menu';

.resto{
    @media screen and (max-width:map-get($map: $breakpoints, $key: phone-max)  ){
        display: grid;
        grid-template-columns: 100%;
        grid-template-rows: max-content max-content max-content;
        .header{
            grid-row: 1/2;
        }
        .main{
            grid-row: 2/3;
        }
        .footer{
            grid-row: 3/4;
        }
    }
    .main{
        position: relative;        
        & .image{
            width: 100%;
           /* @media screen and (max-width:map-get($map: $breakpoints, $key: phone-max)  ){
            }*/
            &-grid{
                display: none;
            }
            @media screen and (min-width:map-get($map: $breakpoints, $key: tablette-min)) and (max-width:map-get($map: $breakpoints, $key: tablette-max)  ){
                display: none;
                &-grid{
                    display: inline-block;
                    grid-column: 1/2;
                    grid-row: 1/2;
                    width: 92%;
                    margin: auto;
                }
            }
            @media screen and (min-width:map-get($map: $breakpoints, $key: ordi-min)){
                display: none;
                &-grid{
                    border-radius: $borderradius_menu--standard;
                    display: inline-block;
                    grid-column: 1/2;
                    grid-row: 1/2;
                    width: 90%;
                    margin: auto;
                }
            }
        }
        h3,p{
                text-indent: $textindent_main;
                width: 80%;
                /*pour que le texte qui déborde apparaissent sous la forme de ... */
                @include overflow;
            }   
        & .menu{ 
            width: 100%;
            background-color: $background_menu;
            border-radius: $borderradius_menu--standard $borderradius_menu--standard 0 0;
            @media screen and (max-width:map-get($map: $breakpoints, $key:phone-max)){
                padding-bottom: $padding_menu--bottom;
            }
            @media screen and (min-width:map-get($map: $breakpoints, $key: tablette-min)) and (max-width:map-get($map: $breakpoints, $key: tablette-max)){
               @include restaurant (2,2,$height_repeat--menu,$heigth_button);                
            }
            @media screen and (min-width:map-get($map: $breakpoints, $key: ordi-min)) {
                @include restaurant (3,1,$height_repeat--menu,$heigth_button); //test modifié            
            }
            &-entrees{                
                @media screen and (min-width:map-get($map: $breakpoints, $key: tablette-min)) and (max-width:map-get($map: $breakpoints, $key: tablette-max) ){
                    grid-column: 2/3;
                    grid-row: 1/2;
                }
                @media screen and (min-width:map-get($map: $breakpoints, $key: ordi-min)){
                    grid-column: 1/2;
                    grid-row: 2/3;
                    @include overflow;
                }
            }
            &-plats{
                @media screen and (min-width:map-get($map: $breakpoints, $key: tablette-min)) and (max-width:map-get($map: $breakpoints, $key: tablette-max)){
                    grid-column: 1/2;
                    grid-row: 2/3;  
                }
                @media screen and (min-width:map-get($map: $breakpoints, $key: ordi-min)){
                    grid-column: 2/3;
                    grid-row: 2/3;
                    
                }
            }
            &-desserts{
                @media screen and (max-width:map-get($map: $breakpoints, $key: phone-max)) {
                    padding-bottom: $padding_dessert;    
                }   
                @media screen and (min-width:map-get($map: $breakpoints, $key: tablette-min)) and (max-width:map-get($map: $breakpoints, $key: tablette-max)){
                    grid-column: 2/3;
                    grid-row: 2/3;
                }
                @media screen and (min-width:map-get($map: $breakpoints, $key: ordi-min)){
                    grid-column: 3/4;
                    grid-row: 2/3;
                }
            }
            &-title{
                padding-top:$padding_menu--title;
                margin: 0 $textindent_menu--title;
                position: relative;
                display: flex;
                justify-content: space-between;
                align-items: center;
                & h1{
                    font-family: $font-main_info;
                    font-size: $fontsize_mainTitle--menu;
                    }
                @include favori($place);
                    right: 10px;                                
                @media screen and (min-width:map-get($map: $breakpoints, $key: ordi-min)) {
                    grid-column: 1/3;
                    grid-row: 1/2;
                }                
            }
            & h2{
                position: relative;
                text-indent: $textindent_menu--title;
                text-transform: uppercase;
                font-size: $fontsize_menu--title;
                margin-top: $margin_menu--title;
                &::before{
                    @include underline;
                }
            }
            & ul{
                display: flex;
                list-style: none;
                align-items: center;
                margin-top: $margin_menu--list;
                flex-direction: column;
                & li{
                    margin-top:$margin_index--list;
                    background: $background_plat;
                    width: 92%;
                    font-size: $fontsize_menu;
                    border-radius: $borderradius_menu;
                }
            }
        }
    }
}

.menu{
    &-entrees{
        ul{
            li{
                @for $i from 1 to 5 {
                    &:nth-child(#{$i}){
                        @include plateshow($i);
                    }
                }

            }
        }
    }
    &-plats{
        ul{
            li{
                @for $i from 1 to 4 {
                    &:nth-child(#{$i}){
                        @include plateshow(4+$i);
                    }
                }
            }       
        }
    }
    &-desserts{
         ul{
            li{
                @for $i from 1 to 4 {
                    &:nth-child(#{$i}){
                        @include plateshow(8+$i);
                    }
                }
            }       
        }
    }
    
}

.buttonarea{
    width: 100%;
    text-align: center;
    margin-top: $margin_menu--button;
    .btn{
        margin-bottom: $marginbottom_menu--button;
        height: $heigth_button--menu;
    }
}

@media screen and (min-width:map-get($map: $breakpoints, $key:tablette-min)) and (max-width:map-get($map: $breakpoints, $key:tablette-max)){
    .buttonarea{
    grid-row: 3/4;
    grid-column: 1/3;
    }
}

@media screen and (min-width:map-get($map: $breakpoints, $key:ordi-min)) {
    .buttonarea{
        grid-row: 3/4;
        grid-column: 1/4;
    }
}
                
@media screen and (min-width:map-get($map: $breakpoints, $key: tablette-min)){
    .main{
        display: flex;
    }
}